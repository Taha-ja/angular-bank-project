{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../customers.service.\";\nimport * as i3 from \"@angular/router\";\nexport class CreateRouteComponent {\n  constructor(formBuilder, customerService, router) {\n    this.formBuilder = formBuilder;\n    this.customerService = customerService;\n    this.router = router;\n    this.isLoading = false;\n    this.pokemonForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20)], [this.validateName.bind(this)]],\n      attack: [0, [Validators.required, Validators.min(1), Validators.max(100)]],\n      defense: [0, [Validators.required, Validators.min(1), Validators.max(100)]],\n      hasEvolution: [false],\n      description: ['', Validators.required]\n    });\n  }\n  submit() {\n    this.isLoading = true;\n    this.customerService.createCustomer(this.pokemonForm.value).subscribe(customer => {\n      this.isLoading = false;\n      this.pokemonForm.reset();\n      this.router.navigate(['/details', customer.id]);\n    });\n  }\n  getControl(controlName) {\n    return this.pokemonForm.get(controlName);\n  }\n  canSubmit() {\n    return this.pokemonForm.dirty && this.pokemonForm.valid;\n  }\n  validateName(control) {\n    return this.customerService.getCustomerByName(control.value).pipe(map(customers => {\n      if (customers.length > 0) {\n        return {\n          nameExists: true\n        };\n      }\n      return null;\n    }));\n  }\n}\nCreateRouteComponent.ɵfac = function CreateRouteComponent_Factory(t) {\n  return new (t || CreateRouteComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomersService), i0.ɵɵdirectiveInject(i3.Router));\n};\nCreateRouteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateRouteComponent,\n  selectors: [[\"app-create-route\"]],\n  decls: 33,\n  vars: 0,\n  consts: [[1, \"flex\", \"flex-col\", \"items-center\", \"w-full\", \"mx-auto\", \"mt-20\"], [1, \"pt-4\", \"text-2xl\", \"text-center\"], [1, \"px-8\", \"pt-6\", \"pb-8\", \"mb-4\", \"bg-white\", \"rounded\", \"md:w-fit\", \"w-full\"], [1, \"mb-4\", \"md:flex\", \"md:justify-between\"], [1, \"mb-4\", \"md:mr-2\", \"md:mb-0\"], [\"for\", \"firstName\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-bold\", \"text-gray-700\"], [\"id\", \"firstName\", \"type\", \"text\", \"placeholder\", \"First Name\", 1, \"w-full\", \"px-3\", \"py-2\", \"text-sm\", \"leading-tight\", \"text-gray-700\", \"border\", \"rounded\", \"shadow\", \"appearance-none\", \"focus:outline-none\", \"focus:shadow-outline\"], [1, \"md:ml-2\"], [\"for\", \"lastName\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-bold\", \"text-gray-700\"], [\"id\", \"lastName\", \"type\", \"text\", \"placeholder\", \"Last Name\", 1, \"w-full\", \"px-3\", \"py-2\", \"text-sm\", \"leading-tight\", \"text-gray-700\", \"border\", \"rounded\", \"shadow\", \"appearance-none\", \"focus:outline-none\", \"focus:shadow-outline\"], [1, \"mb-4\"], [\"for\", \"email\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-bold\", \"text-gray-700\"], [\"id\", \"email\", \"type\", \"email\", \"placeholder\", \"Email\", 1, \"w-full\", \"px-3\", \"py-2\", \"mb-3\", \"text-sm\", \"leading-tight\", \"text-gray-700\", \"border\", \"rounded\", \"shadow\", \"appearance-none\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"address\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-bold\", \"text-gray-700\"], [\"id\", \"address\", \"type\", \"text\", \"placeholder\", \"Address\", 1, \"w-full\", \"px-3\", \"py-2\", \"mb-3\", \"text-sm\", \"leading-tight\", \"text-gray-700\", \"border\", \"rounded\", \"shadow\", \"appearance-none\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"gender\", 1, \"inline-block\", \"mb-2\", \"text-sm\", \"font-bold\", \"text-gray-700\"], [\"name\", \"cars\", \"id\", \"gender\"], [\"value\", \"Male\"], [\"value\", \"Female\"], [1, \"mb-6\", \"text-center\"], [\"type\", \"button\", 1, \"w-full\", \"px-4\", \"py-2\", \"font-bold\", \"text-white\", \"bg-blue-500\", \"rounded-full\", \"hover:bg-blue-700\", \"focus:outline-none\", \"focus:shadow-outline\"], [1, \"mb-6\", \"border-t\"]],\n  template: function CreateRouteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n      i0.ɵɵtext(2, \"Create an Account!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \" First Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \" Last Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 10)(14, \"label\", 11);\n      i0.ɵɵtext(15, \" Email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 10)(18, \"label\", 13);\n      i0.ɵɵtext(19, \" Address \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\")(22, \"label\", 15);\n      i0.ɵɵtext(23, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"select\", 16)(25, \"option\", 17);\n      i0.ɵɵtext(26, \"Male\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"option\", 18);\n      i0.ɵɵtext(28, \"Female\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\", 19)(30, \"button\", 20);\n      i0.ɵɵtext(31, \" Register Account \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(32, \"hr\", 21);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.NgControlStatusGroup, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","map","CreateRouteComponent","constructor","formBuilder","customerService","router","pokemonForm","group","name","required","minLength","maxLength","validateName","bind","attack","min","max","defense","hasEvolution","description","submit","isLoading","createCustomer","value","subscribe","customer","reset","navigate","id","getControl","controlName","get","canSubmit","dirty","valid","control","getCustomerByName","pipe","customers","length","nameExists","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\angular-project\\src\\app\\create-route\\create-route.component.ts","D:\\angular-project\\src\\app\\create-route\\create-route.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { map, Observable } from 'rxjs';\nimport { CustomersService } from '../customers.service.';\nimport { Customer } from '../models/customer.model';\n\n@Component({\n  selector: 'app-create-route',\n  templateUrl: './create-route.component.html',\n  styleUrls: ['./create-route.component.css']\n})\nexport class CreateRouteComponent {\n  pokemonForm: FormGroup;\n  isLoading = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private customerService: CustomersService,\n    private router: Router\n  ) {\n    this.pokemonForm = this.formBuilder.group({\n      name: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(20),\n        ],\n        [this.validateName.bind(this)],\n      ],\n      attack: [\n        0,\n        [Validators.required, Validators.min(1), Validators.max(100)],\n      ],\n      defense: [\n        0,\n        [Validators.required, Validators.min(1), Validators.max(100)],\n      ],\n      hasEvolution: [false],\n      description: ['', Validators.required],\n    });\n  }\n\n  submit() {\n    this.isLoading = true;\n    this.customerService\n      .createCustomer(this.pokemonForm.value)\n      .subscribe((customer: Customer) => {\n        this.isLoading = false;\n        this.pokemonForm.reset();\n        this.router.navigate(['/details', customer.id]);\n      });\n  }\n\n  getControl(controlName: string) {\n    return this.pokemonForm.get(controlName);\n  }\n\n  canSubmit(): boolean {\n    return this.pokemonForm.dirty && this.pokemonForm.valid;\n  }\n\n  validateName(control: AbstractControl): Observable<{ nameExists: boolean } | null> {\n    return this.customerService.getCustomerByName(control.value).pipe(\n      map((customers: Customer[]) => {\n        if (customers.length > 0) {\n          return { nameExists: true };\n        }\n        return null;\n      })\n    );\n  }\n}\n","<!-- <div class=\"flex flex-col items-center w-1/2 mx-auto\">\n  <h1>Create a new Pokemon</h1>\n  <form [formGroup]=\"pokemonForm\" (ngSubmit)=\"submit()\" class=\"flex flex-col w-full gap-6 mt-6\">\n      <div class=\"flex flex-col gap-2\">\n          <label for=\"name\">First name *</label>\n          <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"border rounded-md shadow px-4 py-2\">\n          <small class=\"text-red-500\" *ngIf=\"getControl('name')?.hasError('required') && getControl('name')?.touched\">\n              First name is required\n          </small>\n          <small class=\"text-red-500\" *ngIf=\"getControl('name')?.hasError('nameExists') && getControl('name')?.touched\">\n              this Name already exists\n          </small>\n      </div>\n      <div class=\"flex flex-col gap-2\">\n        <label for=\"name\">Last name *</label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"border rounded-md shadow px-4 py-2\">\n        <small class=\"text-red-500\" *ngIf=\"getControl('name')?.hasError('required') && getControl('name')?.touched\">\n            Last name is required\n        </small>\n        <small class=\"text-red-500\" *ngIf=\"getControl('name')?.hasError('nameExists') && getControl('name')?.touched\">\n            this Name already exists\n        </small>\n    </div>\n      <div class=\"flex flex-col gap-2\">\n          <label for=\"attack\">Attack *</label>\n          <input type=\"number\" id=\"attack\" formControlName=\"attack\" class=\"border rounded-md shadow px-4 py-2\">\n          <small class=\"text-red-500\" *ngIf=\"getControl('attack')?.hasError('required') && getControl('attack')?.touched\">\n              Attack is required\n          </small>\n          <small class=\"text-red-500\" *ngIf=\"getControl('attack')?.hasError('min') && getControl('attack')?.touched\">\n              Attack must be greater than 0\n          </small>\n          <small class=\"text-red-500\" *ngIf=\"getControl('attack')?.hasError('max') && getControl('attack')?.touched\">\n              Attack must be less than 100\n          </small>\n      </div>\n      <div class=\"flex flex-col gap-2\">\n          <label for=\"defense\">Defense *</label>\n          <input type=\"number\" id=\"defense\" formControlName=\"defense\" class=\"border rounded-md shadow px-4 py-2\">\n          <small class=\"text-red-500\" *ngIf=\"getControl('defense')?.hasError('required') && getControl('defense')?.touched\">\n              Defense is required\n          </small>\n          <small class=\"text-red-500\" *ngIf=\"getControl('defense')?.hasError('min') && getControl('defense')?.touched\">\n              Defense must be greater than 0\n          </small>\n          <small class=\"text-red-500\" *ngIf=\"getControl('defense')?.hasError('max') && getControl('defense')?.touched\">\n              Defense must be less than 100\n          </small>\n      </div>\n      <div class=\"flex items-center gap-2\">\n          <label for=\"hasEvolution\" class=\"cursor-pointer\">Has evolution</label>\n          <input type=\"checkbox\" id=\"hasEvolution\" formControlName=\"hasEvolution\" class=\"border rounded-md shadow\">\n      </div>\n      <div class=\"flex flex-col gap-2\">\n          <label for=\"description\">Description *</label>\n          <textarea type=\"text\" id=\"description\" formControlName=\"description\" class=\"border rounded-md shadow px-4 py-2\"></textarea>\n          <small class=\"text-red-500\" *ngIf=\"getControl('description')?.hasError('required') && getControl('description')?.touched\">\n              Description is required\n          </small>\n      </div>\n      <button type=\"submit\"\n          class=\"border border-green-400 rounded-md shadow p-2 bg-green-400 hover:bg-green-500 text-green-900 w-1/3 ml-auto disabled:opacity-50\"\n          [disabled]=\"isLoading || !canSubmit()\"\n          >{{isLoading ? 'Creation...': 'Create'}}</button>\n  </form>\n</div>\n\n\n\n -->\n\n\n\n\n<div class=\"flex flex-col items-center w-full mx-auto mt-20\">\n          <h3 class=\"pt-4 text-2xl text-center\">Create an Account!</h3>\n          <form class=\"px-8 pt-6 pb-8 mb-4 bg-white rounded md:w-fit w-full\">\n            <div class=\"mb-4 md:flex md:justify-between\">\n              <div class=\"mb-4 md:mr-2 md:mb-0\">\n                <label class=\"block mb-2 text-sm font-bold text-gray-700\" for=\"firstName\">\n                  First Name\n                </label>\n                <input\n                  class=\"w-full px-3 py-2 text-sm leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                  id=\"firstName\"\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                />\n              </div>\n              <div class=\"md:ml-2\">\n                <label class=\"block mb-2 text-sm font-bold text-gray-700\" for=\"lastName\">\n                  Last Name\n                </label>\n                <input\n                  class=\"w-full px-3 py-2 text-sm leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                  id=\"lastName\"\n                  type=\"text\"\n                  placeholder=\"Last Name\"\n                />\n              </div>\n            </div>\n            <div class=\"mb-4\">\n              <label class=\"block mb-2 text-sm font-bold text-gray-700\" for=\"email\">\n                Email\n              </label>\n              <input\n                class=\"w-full px-3 py-2 mb-3 text-sm leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n              />\n            </div>\n            <div class=\"mb-4\">\n              <label class=\"block mb-2 text-sm font-bold text-gray-700\" for=\"address\">\n                Address\n              </label>\n              <input\n                class=\"w-full px-3 py-2 mb-3 text-sm leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n                id=\"address\"\n                type=\"text\"\n                placeholder=\"Address\"\n              />\n            </div>\n            <div>\n              <label for=\"gender\" class=\"inline-block mb-2 text-sm font-bold text-gray-700\">Gender</label>\n              <select name=\"cars\" id=\"gender\">\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n              </select>\n            </div>\n            <div class=\"mb-6 text-center\">\n              <button\n                class=\"w-full px-4 py-2 font-bold text-white bg-blue-500 rounded-full hover:bg-blue-700 focus:outline-none focus:shadow-outline\"\n                type=\"button\"\n              >\n                Register Account\n              </button>\n            </div>\n            <hr class=\"mb-6 border-t\" />\n\n          </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}