{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../customers.service.\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction UpdateRouteComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const gender_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", gender_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", gender_r2, \" \");\n  }\n}\nfunction UpdateRouteComponent_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const accountType_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", accountType_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", accountType_r3, \" \");\n  }\n}\nexport class UpdateRouteComponent {\n  constructor(formBuilder, customerService, router) {\n    this.formBuilder = formBuilder;\n    this.customerService = customerService;\n    this.router = router;\n    this.isLoading = false;\n    this.genders = [\"Male\", \"Female\"];\n    this.accountTypes = [\"Saving\", \"Checking\"];\n    this.customerForm = this.formBuilder.group({\n      firstName: [''],\n      lastName: [''],\n      email: [\"\"],\n      address: [\"\"],\n      gender: [null],\n      accountType: [null]\n    }, {\n      updateOn: 'blur'\n    });\n  }\n  ngOnInit() {\n    this.customerService.getCustomerById();\n  }\n  submit() {\n    this.isLoading = true;\n    console.log(this.customerForm.value);\n    this.customerService.updateCustomer(this.customerForm.value).subscribe(customer => {\n      this.isLoading = false;\n      console.log(customer);\n      this.customerForm.reset();\n      this.router.navigate(['/details', customer.id]);\n    });\n  }\n  getControl(controlName) {\n    return this.customerForm.get(controlName);\n  }\n  canSubmit() {\n    return this.customerForm.dirty && this.customerForm.valid;\n  }\n}\nUpdateRouteComponent.ɵfac = function UpdateRouteComponent_Factory(t) {\n  return new (t || UpdateRouteComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomersService), i0.ɵɵdirectiveInject(i3.Router));\n};\nUpdateRouteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateRouteComponent,\n  selectors: [[\"app-update-route\"]],\n  decls: 39,\n  vars: 6,\n  consts: [[1, \"flex\", \"flex-col\", \"items-center\", \"w-full\", \"mx-auto\", \"mt-20\"], [1, \"py-8\", \"text-2xl\", \"text-center\"], [1, \"px-8\", \"pt-6\", \"pb-8\", \"mb-4\", \"bg-white\", \"rounded\", \"md:w-fit\", \"w-full\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-4\", \"md:flex\", \"md:justify-between\"], [1, \"mb-4\", \"md:mr-2\", \"md:mb-0\"], [\"for\", \"firstName\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-bold\", \"text-gray-700\"], [\"id\", \"firstName\", \"type\", \"text\", \"placeholder\", \"First Name\", \"formControlName\", \"firstName\", \"value\", \"\", 1, \"w-full\", \"px-3\", \"py-2\", \"text-sm\", \"leading-tight\", \"text-gray-700\", \"border\", \"rounded\", \"shadow\", \"appearance-none\", \"focus:outline-none\", \"focus:shadow-outline\"], [1, \"md:ml-2\"], [\"for\", \"lastName\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-bold\", \"text-gray-700\"], [\"id\", \"lastName\", \"type\", \"text\", \"placeholder\", \"Last Name\", \"formControlName\", \"lastName\", 1, \"w-full\", \"px-3\", \"py-2\", \"text-sm\", \"leading-tight\", \"text-gray-700\", \"border\", \"rounded\", \"shadow\", \"appearance-none\", \"focus:outline-none\", \"focus:shadow-outline\"], [1, \"mb-4\", \"md:w-full\", \"mr-2\"], [\"for\", \"email\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-bold\", \"text-gray-700\"], [\"id\", \"email\", \"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"w-full\", \"px-3\", \"py-2\", \"mb-3\", \"text-sm\", \"leading-tight\", \"text-gray-700\", \"border\", \"rounded\", \"shadow\", \"appearance-none\", \"focus:outline-none\", \"focus:shadow-outline\"], [1, \"mb-4\", \"md:flex\", \"md:justify-between\", \"md:gap-4\"], [1, \"md:w-1/2\"], [\"for\", \"gender\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-bold\", \"text-gray-700\"], [\"formControlName\", \"gender\", \"name\", \"gender\", \"id\", \"gender\", 1, \"w-full\", \"px-3\", \"py-2\", \"mb-3\", \"text-sm\", \"leading-tight\", \"text-gray-700\", \"border\", \"rounded\", \"shadow\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"disabled\", \"\", 3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"accountType\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-bold\", \"text-gray-700\"], [\"formControlName\", \"accountType\", \"name\", \"accountType\", \"id\", \"accountType\", 1, \"w-full\", \"px-3\", \"py-2\", \"mb-3\", \"text-sm\", \"leading-tight\", \"text-gray-700\", \"border\", \"rounded\", \"shadow\", \"focus:outline-none\", \"focus:shadow-outline\"], [1, \"mb-4\"], [\"for\", \"address\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-bold\", \"text-gray-700\"], [\"id\", \"address\", \"type\", \"text\", \"placeholder\", \"Address\", \"formControlName\", \"address\", 1, \"w-full\", \"px-3\", \"py-2\", \"mb-3\", \"text-sm\", \"leading-tight\", \"text-gray-700\", \"border\", \"rounded\", \"shadow\", \"appearance-none\", \"focus:outline-none\", \"focus:shadow-outline\"], [1, \"mb-6\", \"text-center\"], [\"type\", \"submit\", 1, \"disabled:cursor-not-allowed\", \"cursor-pointer\", \"w-1/2\", \"px-4\", \"py-2\", \"font-bold\", \"text-white\", \"bg-green-500\", \"rounded-full\", \"hover:bg-green-700\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"disabled\"], [3, \"ngValue\"]],\n  template: function UpdateRouteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n      i0.ɵɵtext(2, \"Create a Customer!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateRouteComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \" First Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \" Last Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 10)(14, \"label\", 11);\n      i0.ɵɵtext(15, \" Email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 13)(18, \"div\", 14)(19, \"label\", 15);\n      i0.ɵɵtext(20, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"select\", 16)(22, \"option\", 17);\n      i0.ɵɵtext(23, \" -- Gender -- \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, UpdateRouteComponent_option_24_Template, 2, 2, \"option\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 14)(26, \"label\", 19);\n      i0.ɵɵtext(27, \"Account Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"select\", 20)(29, \"option\", 17);\n      i0.ɵɵtext(30, \" -- Account -- \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(31, UpdateRouteComponent_option_31_Template, 2, 2, \"option\", 18);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"div\", 21)(33, \"label\", 22);\n      i0.ɵɵtext(34, \" Address \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 24)(37, \"button\", 25);\n      i0.ɵɵtext(38, \" Create \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.customerForm);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngValue\", null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.genders);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngValue\", null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.accountTypes);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", ctx.isLoading || !ctx.canSubmit());\n    }\n  },\n  dependencies: [i4.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","UpdateRouteComponent","constructor","formBuilder","customerService","router","customerForm","group","firstName","lastName","email","address","gender","accountType","updateOn","ngOnInit","getCustomerById","submit","isLoading","console","log","value","updateCustomer","subscribe","customer","reset","navigate","id","getControl","controlName","get","canSubmit","dirty","valid","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\angular-project\\src\\app\\update-route\\update-route.component.html","D:\\angular-project\\src\\app\\update-route\\update-route.component.ts"],"sourcesContent":["<div class=\"flex flex-col items-center w-full mx-auto mt-20\">\n  <h3 class=\"py-8 text-2xl text-center\">Create a Customer!</h3>\n  <form class=\"px-8 pt-6 pb-8 mb-4 bg-white rounded md:w-fit w-full\" [formGroup]=\"customerForm\" (ngSubmit)=\"submit()\" >\n    <div class=\"mb-4 md:flex md:justify-between\">\n      <div class=\"mb-4 md:mr-2 md:mb-0\">\n        <label class=\"block mb-2 text-sm font-bold text-gray-700\" for=\"firstName\">\n          First Name\n        </label>\n        <input\n          class=\"w-full px-3 py-2 text-sm leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n          id=\"firstName\"\n          type=\"text\"\n          placeholder=\"First Name\"\n          formControlName=\"firstName\"\n          value=\"\"\n        />\n      </div>\n      <div class=\"md:ml-2\">\n        <label class=\"block mb-2 text-sm font-bold text-gray-700\" for=\"lastName\">\n          Last Name\n        </label>\n        <input\n          class=\"w-full px-3 py-2 text-sm leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n          id=\"lastName\"\n          type=\"text\"\n          placeholder=\"Last Name\"\n          formControlName=\"lastName\"\n        />\n      </div>\n    </div>\n        <div class=\"mb-4 md:w-full mr-2\">\n        <label class=\"block mb-2 text-sm font-bold text-gray-700\" for=\"email\">\n          Email\n        </label>\n        <input\n          class=\"w-full px-3 py-2 mb-3 text-sm leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n          id=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          formControlName=\"email\"\n        />\n      </div>\n    <div class=\"mb-4 md:flex md:justify-between md:gap-4\">\n      <div class=\"md:w-1/2\">\n        <label for=\"gender\" class=\" block mb-2 text-sm font-bold text-gray-700\">Gender</label>\n        <select formControlName=\"gender\" name=\"gender\" id=\"gender\" class=\"w-full px-3 py-2 mb-3 text-sm leading-tight text-gray-700 border rounded shadow  focus:outline-none focus:shadow-outline\">\n          <option [ngValue]=\"null\" disabled>  -- Gender --   </option>\n          <option *ngFor=\"let gender of genders\" [ngValue]=\"gender\">\n            {{gender}}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"md:w-1/2\">\n        <label for=\"accountType\" class=\" block mb-2 text-sm font-bold text-gray-700\">Account Type</label>\n        <select formControlName=\"accountType\" name=\"accountType\" id=\"accountType\" class=\"w-full px-3 py-2 mb-3 text-sm leading-tight text-gray-700 border rounded shadow  focus:outline-none focus:shadow-outline\">\n          <option [ngValue]=\"null\" disabled>  -- Account --   </option>\n          <option *ngFor=\"let accountType of accountTypes\" [ngValue]=\"accountType\">\n            {{accountType}}\n          </option>\n        </select>\n      </div>\n    </div>\n    <div class=\"mb-4\">\n      <label class=\"block mb-2 text-sm font-bold text-gray-700\" for=\"address\">\n        Address\n      </label>\n      <input\n        class=\"w-full px-3 py-2 mb-3 text-sm leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\n        id=\"address\"\n        type=\"text\"\n        placeholder=\"Address\"\n        formControlName=\"address\"\n      />\n    </div>\n    <div class=\"mb-6 text-center\">\n      <button\n        class=\"disabled:cursor-not-allowed cursor-pointer w-1/2 px-4 py-2 font-bold text-white bg-green-500 rounded-full hover:bg-green-700 focus:outline-none focus:shadow-outline\"\n        type=\"submit\"\n        [disabled]=\"isLoading || !canSubmit()\"\n      >\n        Create\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CustomersService } from '../customers.service.';\nimport { Customer } from '../models/customer.model';\n\n@Component({\n  selector: 'app-update-route',\n  templateUrl: './update-route.component.html',\n  styleUrls: ['./update-route.component.css']\n})\nexport class UpdateRouteComponent implements OnInit{\n  customerForm: FormGroup;\n  isLoading = false;\n  genders = [\"Male\",\"Female\"];\n  accountTypes = [\"Saving\",\"Checking\"];\n  updatedCustomer !: Customer;\n  constructor(\n    private formBuilder: FormBuilder,\n    private customerService: CustomersService,\n    private router: Router\n  ) {\n    this.customerForm = this.formBuilder.group({\n      firstName: [\n        '',\n      ],\n      lastName: [\n        '',\n      ],\n      email: [\n        \"\",\n      ],\n      address: [\n        \"\",\n      ],\n      gender: [\n        null,\n      ],\n      accountType: [\n        null,\n      ],\n    },{ updateOn: 'blur' });\n  }\n  ngOnInit(): void {\n    \n    this.customerService.getCustomerById()\n  }\n  submit() {\n\n    this.isLoading = true;\n    console.log(this.customerForm.value);\n    this.customerService\n      .updateCustomer(this.customerForm.value)\n      .subscribe((customer: Customer) => {\n        this.isLoading = false;\n        console.log(customer);\n        this.customerForm.reset();\n        this.router.navigate(['/details', customer.id]);\n      });\n\n  }\n\n  getControl(controlName: string) {\n    return this.customerForm.get(controlName);\n  }\n\n  canSubmit(): boolean {\n    return this.customerForm.dirty && this.customerForm.valid;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}